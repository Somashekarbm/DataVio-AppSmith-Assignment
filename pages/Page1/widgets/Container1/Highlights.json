{
  "animateLoading": true,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 33,
  "dynamicBindingPathList": [
    {
      "key": "truncateButtonColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "text"
    }
  ],
  "dynamicHeight": "AUTO_HEIGHT",
  "dynamicTriggerPathList": [],
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "fontSize": "1rem",
  "fontStyle": "BOLD",
  "isLoading": false,
  "isVisible": true,
  "key": "j3iyyxt3ca",
  "leftColumn": 3,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "minWidth": 450,
  "mobileBottomRow": 9,
  "mobileLeftColumn": 4,
  "mobileRightColumn": 20,
  "mobileTopRow": 5,
  "needsErrorInfo": false,
  "originalBottomRow": 46,
  "originalTopRow": 33,
  "overflow": "NONE",
  "parentColumnSpace": 4.802978515625,
  "parentId": "ml4yn1woyb",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 62,
  "shouldTruncate": false,
  "text": "Highlights: <br/> {{\n  function() {\n    const highlights = getProductDetails.data[0].highlights;\n    if (!highlights) return \"No highlights available\";\n    \n    // Parse the highlights if they're stored as a string\n    let highlightArray;\n    try {\n      highlightArray = typeof highlights === 'string' ? JSON.parse(highlights) : highlights;\n    } catch (e) {\n      return highlights; // Return as is if parsing fails\n    }\n    \n    // Format as numbered list\n    if (Array.isArray(highlightArray)) {\n      return highlightArray.map((item, index) => `${index + 1}. ${item}`).join('\\n');\n    }\n    \n    return \"No highlights available\";\n  }()\n}}",
  "textAlign": "LEFT",
  "textColor": "#231F20",
  "topRow": 20,
  "truncateButtonColor": "{{appsmith.theme.colors.primaryColor}}",
  "type": "TEXT_WIDGET",
  "version": 1,
  "widgetId": "rpxaz4z3o5",
  "widgetName": "Highlights"
}